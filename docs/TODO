DOING
- test body parse


TODO

- tanto GET como DELETE 

- tener en cuenta que el body es opcional aunque sea chunked

- test requests partidas

- tengo que bajar el puerto hasta joan
                                                    
- reflexionar sobre de cuanto en cuanto leo, y como gestionar la data extra en las conexiones
+ gestionarlo leyendo de x en x, el metodo addData de la request devuelve la data que no ha usado y la data\
  por parsear se guarda en la conexion

- gestionar errores en las llamadas al sistema

- reflexionar sobre como checkear el maxbody size del server, idealmente saberlo antes de parsear el body, asi podremos\
  cortar en cuanto veamos que nos pasan un body length mas grande que el que queramos recibir en vez de parsear todo.
+ Quizas no tiene sentido hacerlo ya que solo valdria para una proteccion contra DDOS, pero podria haber otras muchas formas en\
  las que nos pueden hacer DDOS.

- reflexionar sobre que pasa cuando el Host es una ip o localhost en vez de un regname, a que server lo mando?? 
+ quiza aqui es donde entra el default y nuestra interpretacion primera era correcta, el equipo de pepe
  interpreta que el "host" del subject es la ip propia, asi que siempre es el mismo, por tanto el default del server_name es a nivel de port

- a√±adir parseo pctEnconded en URI DESPUES de dividir por barras e interrogaciones

- add goto CGI confirmation (find .py or .go)

- reflexionar sobre almacenamiento (particularmente imagenes y videos) en deques, porque gestiona la memoria en bloques de 512

- ver como usar los fds en non-blocking mode

- mirar tema de reusar sockets


DONE


chunked-body =		*chunk
                	last-chunk
                	trailer-section //ignore, not even checked
                	CRLF

	chunk      	=	chunk-size [ chunk-ext ] CRLF     //chucked-ext will be ignored, so we dont even check it
                	chunk-data CRLF

		chunk-size     = 1*HEXDIG

		chunk-ext      = *( BWS ";" BWS chunk-ext-name
					[ BWS "=" BWS chunk-ext-val ] )

			chunk-ext-name = token
			chunk-ext-val  = token / quoted-string
	
  		chunk-data     = 1*OCTET ; a sequence of chunk-size octets

	last-chunk        = 1*("0") [ chunk-ext ] CRLF

	trailer-section   = *( field-line CRLF )    //ignore
